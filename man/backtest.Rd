% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backtest.R
\name{backtest}
\alias{backtest}
\title{Run a backtest on a trading strategy}
\usage{
backtest(
  dat,
  exit_fun = NULL,
  exit_args = list(),
  CloseTradeOnOppositeSignal = TRUE,
  AddToPosition = FALSE,
  TradeTimeLimit = lubridate::weeks(4),
  verbose = TRUE
)
}
\arguments{
\item{dat}{A data.table containing merged price and signal data with columns:
- date: POSIXct timestamps
- Open.a, High.a, Low.a, Close.a: Ask prices
- Open.b, High.b, Low.b, Close.b: Bid prices
- OrderSize: Position size (positive for long, negative for short)
- Additional columns as needed for exit logic}

\item{exit_fun}{Exit function to apply (default: exit_TP_SL_signal)}

\item{exit_args}{List of additional arguments to pass to exit function}

\item{CloseTradeOnOppositeSignal}{Logical. Close positions on opposite signals? (default: TRUE)}

\item{AddToPosition}{Logical. Allow adding to existing positions? (default: FALSE)}

\item{TradeTimeLimit}{Maximum time to hold a position (default: 4 weeks)}

\item{verbose}{Logical. Print trade results during execution? (default: TRUE)}
}
\value{
A list containing:
  - results: data.table of all trades with entry/exit details and returns
  - data: original data merged with trade information
}
\description{
Executes a backtest by processing entry signals and applying exit logic
to simulate trading performance over historical data.
}
\examples{
\dontrun{
# Basic backtest
bt <- backtest(strategy_data, verbose = TRUE)

# Custom exit function and parameters
bt <- backtest(strategy_data,
               exit_fun = custom_exit,
               exit_args = list(trailing_pct = 0.02),
               TradeTimeLimit = lubridate::weeks(2))
}
}
