% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization.R
\name{optimizeStrategy}
\alias{optimizeStrategy}
\title{Optimize strategy parameters using walk-forward analysis}
\usage{
optimizeStrategy(
  price,
  opt_params,
  initial_equity = 1000,
  optimize_on = "net_profit",
  train_set_weeks = 52,
  test_set_weeks = 26,
  return_optimization_details = TRUE
)
}
\arguments{
\item{price}{A data.table with columns: date, Open, High, Low, Close, Volume}

\item{opt_params}{A data.frame where each row is a parameter combination to test}

\item{initial_equity}{Starting capital for performance calculations (default: 1000)}

\item{optimize_on}{Metric to optimize: "net_profit", "profit_factor", "sharpe", "sortino" (default: "net_profit")}

\item{train_set_weeks}{Number of weeks for training window (default: 52)}

\item{test_set_weeks}{Number of weeks for testing window (default: 26)}

\item{return_optimization_details}{Logical. Return detailed optimization history? (default: TRUE)}
}
\value{
If return_optimization_details = TRUE, returns a list with:
  - test_results: List of backtest results for each test window
  - optimization_history: List of all parameter performances in each training window

If FALSE, returns only test_results (backward compatibility)
}
\description{
Performs walk-forward optimization by training on historical windows
and testing on subsequent out-of-sample periods.
}
\examples{
\dontrun{
# Define parameter grid
opt_params <- expand.grid(
  fast_ma = c(10, 20, 30),
  slow_ma = c(50, 100, 200),
  stop_loss = c(0.02, 0.03)
)

# Run optimization
results <- optimizeStrategy(price_data, opt_params,
                          initial_equity = 10000,
                          optimize_on = "sharpe")
}
}
